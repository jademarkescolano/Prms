@using StarbeeRealty.Shared;
@inject ILocalStorageService localStorage
@inject NavigationManager Nav
@using System.Net.Http.Headers
@inject ISnackbar SnackBar


<MudDialog>
    <DialogContent>
        <div class="container">
            <div class="row">
                <div class="col-sm-4">

                    <MudButton Class="mr-1 pa-2" @onclick="clearImg" Style="border-block-end-color" StartIcon="@Icons.Material.Filled.Clear" Color="Color.Primary" Size="Size.Small">
                    </MudButton>
                    <img src="@imgsrc" width="250" height="250" style="border:1px solid gray; margin-top:10px; border-radius:5px;" />
                    <MudFileUpload Class="pa-2" T="IBrowserFile" FilesChanged="UploadFiles" Required>
                        <ButtonTemplate>
                            <MudButton HtmlTag="label"
                                       Variant="Variant.Outlined"
                                       Style="width:250px; border-radius: 20px;"
                                       Color="Color.Tertiary"
                                       StartIcon="@Icons.Filled.UploadFile"
                                       for="@context">
                                Upload VAlID ID
                            </MudButton>
                        </ButtonTemplate>
                    </MudFileUpload>

                </div>
                    <div class="col-sm-4">
                        <MudTextField @bind-Value="@_clients.fname" Label="First Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="@_clients.mname" Label="Middle Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="@_clients.lname" Label="Last Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                        <MudTextField @bind-Value="@_clients.address" Label="Address" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.occupation" Label="Occupation" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.contact" Label="Contact" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.email" Label="Email" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.income" Label="Income" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>

                    <MudSelect @bind-Value="@_clients.civil" Margin="Margin.Dense" T="string" Label="Civil Status" Variant="Variant.Text">
                        <MudSelectItem Value="@("Single")" />
                        <MudSelectItem Value="@("Married")" />
                        <MudSelectItem Value="@("Widow")" />
                        <MudSelectItem Value="@("Seperated")" />
                    </MudSelect>
                    <MudTextField @bind-Value="@_clients.birthdate" Label="Birthdate" Variant="Variant.Text"
                                  Margin="Margin.Dense" InputType="InputType.Date" Format="yyyy-MM-dd"></MudTextField>
                </div>
                <div class="col-sm-4">
                   
                    <MudTextField @bind-Value="@_clients.workadd" Label="Work Address" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.agentname" Label="Agent Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.projectname" Label="Project Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.spousename" Label="Spouse Name" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.spousecontact" Label="Spouse Contact" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudSelect @bind-Value="@_clients.term" Margin="Margin.Dense" T="string" Label="Term" Variant="Variant.Text">
                        <MudSelectItem Value="@("5 Years")" />
                        <MudSelectItem Value="@("6 Years")" />
                        <MudSelectItem Value="@("7 Years")" />
                    </MudSelect>
                    <MudTextField @bind-Value="@_clients.block" Label="Block #" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.lot" Label="Lot #" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                    <MudTextField @bind-Value="@_clients.tcp" Label="Total Cost Price" Variant="Variant.Text" Margin="Margin.Dense"></MudTextField>
                  <br />
                  <MudToolBar>
                        <MudSpacer />  
                        <MudSpacer />   <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="Cancel">Cancel</MudButton>&nbsp;&nbsp;
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="Save">Save</MudButton>
                  </MudToolBar>
                 
                </div>
            </div>
        </div>
        <br />
        <br />
    </DialogContent>
</MudDialog>

@code {
   
    [Parameter]
    public clients _clients { get; set; } = new clients();

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string img64 { get; set; } = "/ ";
    [Parameter] public string imgsrc { get; set; } = "";
    [Parameter] public byte[] _filebytes { get; set; } = null;
    [Parameter] public byte[] photo { get; set; } = null;

    protected override void OnInitialized()
    {
        if (img64 != null && img64.Length > 0)
        {
            imgsrc = string.Format($"data:image/png;base64,{img64}");
        }
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    public bool def { get; set; }
    private async void UploadFiles(IBrowserFile file)
    {
        def = true;
        files.Add(file);
        var memoryStream = new MemoryStream();
        await file.OpenReadStream(file.Size).CopyToAsync(memoryStream);
        _filebytes = memoryStream.ToArray();
        photo = GetImage(Convert.ToBase64String(_filebytes));
        imgsrc = string.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(photo));
        StateHasChanged();
    }

    async Task clearImg()
    {
        var photos = GetImage(img64);

        imgsrc = string.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(photos));
        StateHasChanged();
    }

    public byte[] GetImage(string sBase64String)
    {
        byte[] bytes = null;
        if (!string.IsNullOrEmpty(sBase64String))
        {
            bytes = Convert.FromBase64String(sBase64String);
        }
        return bytes;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    public async Task Save()
    {
        int i = 0;
        var _xclient = new clients
            {
                fname = _clients.fname,
                mname = _clients.mname,
                lname = _clients.lname,
                address = _clients.address,
                occupation = _clients.occupation,
                validID = photo,
                contact = _clients.contact,
                email = _clients.email,
                income = _clients.income,
                civil = _clients.civil,
                birthdate = _clients.birthdate,
                workadd = _clients.workadd,
                agentname = _clients.agentname,
                projectname = _clients.projectname,
                spousename = _clients.spousename,
                spousecontact = _clients.spousecontact,
                term = _clients.term,
                block = _clients.block,
                lot = _clients.lot,
                tcp = _clients.tcp
            };

        using (HttpClient client = new HttpClient())
        {
            client.BaseAddress = new Uri($"{Nav.BaseUri}");
            var json = JsonConvert.SerializeObject(_xclient);
            HttpContent content = new StringContent(json);
            content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
            client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await localStorage.GetItemAsStringAsync("token"));
            HttpResponseMessage response = await client.PostAsync($"api/Client/AddClient", content);
            if (response.IsSuccessStatusCode)
            {
                string contentresponse = await response.Content.ReadAsStringAsync();
                i = JsonConvert.DeserializeObject<int>(contentresponse);
                if (i > 0)
                {
                    await InvokeAsync(async () =>
                    {
                        SnackBar.Add($"Done: Successfully Saved!", Severity.Success);
                        MudDialog.Close();
                        await InvokeAsync(StateHasChanged);
                    });
                }
            }
            else
            {
                await InvokeAsync(() =>
                {
                    SnackBar.Add($"Warning: {response.ReasonPhrase}", Severity.Warning);
                    StateHasChanged();
                });
            }
        }
    }
}